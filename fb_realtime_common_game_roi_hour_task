CREATE OR REPLACE PROCEDURE `gzdw2024.gz_dim.fb_realtime_common_game_roi_hour_task`(run_date DATE, history_day INT64, history_end_day INT64)
begin



--------分平台分国家的收入小时明细
			delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_datail`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_datail`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_datail`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_datail`
			--PARTITION BY stats_date as 
		with a as  
			(
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,ARRAY['TOTAL',platform] AS platform
				,ARRAY['TOTAL',country_code] AS country_code
				,ARRAY['TOTAL',ad_type] AS ad_type
				,ARRAY['TOTAL',placement_name] AS placement_name
				,revenue
				,requests
				,filled_requests
				,impressions
				,clicks
				,revenue - ifnull(last_revenue,0) as this_hour_revenue 
				,requests - ifnull(last_requests,0) as this_hour_requests 
				,filled_requests - ifnull(last_filled_requests,0) as this_hour_filled_requests 
				,impressions - ifnull(last_impressions,0) as this_hour_impressions
				,clicks - ifnull(last_clicks,0) as this_hour_clicks
			FROM
				(
				SELECT
					stats_date
					,event_day_hour
					,package_name
					,platform
					,country_code
					,case when lower(placement_name) like '%banner%' then 'banner'
					when lower(placement_name) like '%rewarded%interstitial%' or lower(placement_name) like '%激励插屏%' then 'rewarded_interstitial'
					when lower(placement_name) like '%interstitial%' then 'interstitial'
					when lower(placement_name) like '%reward%video%' or lower(placement_name) like '%激励视频%' then 'rewarded_video'
					else 'interstitial' end  as ad_type
					,placement_name
					,revenue
					,requests
					,filled_requests
					,impressions
					,clicks
					,lag(revenue) over(partition by stats_date,package_name,country_code,platform,placement_name order by event_day_hour) as last_revenue
					,lag(requests) over(partition by stats_date,package_name,country_code,platform,placement_name order by event_day_hour) as last_requests
					,lag(filled_requests) over(partition by stats_date,package_name,country_code,platform,placement_name order by event_day_hour) as last_filled_requests
					,lag(impressions) over(partition by stats_date,package_name,country_code,platform,placement_name order by event_day_hour) as last_impressions
					,lag(clicks) over(partition by stats_date,package_name,country_code,platform,placement_name order by event_day_hour) as last_clicks
				FROM
					(
					SELECT
						stats_date
						,format_timestamp("%Y-%m-%d %H:00:00", TIMESTAMP(update_timestamp) - INTERVAL 2 HOUR,'America/Los_Angeles') as event_day_hour 
						,package_name
						,platform
						,country_code
						,placement_name
						,MAX(revenue) AS revenue
						,MAX(requests) as requests
						,MAX(filled_requests) as filled_requests
						,MAX(impressions) as impressions
						,MAX(clicks) as clicks
					FROM
						(
						SELECT 
							parse_date('%Y%m%d',_table_suffix) as stats_date
							,update_timestamp
							,case when app_name='Solitaire' then 'fb.zp' 
								when app_name='OHO' then 'fb.ai.avatar.puzzle' 
								when app_name='Bubble Pop Fruit' then 'fb.fruit.bubble' 
								when app_name='AHA' then 'fb.ai.aha' 
								when app_name='Fate Quest' then 'fb.otme.fate.quest' 
								when app_name='Block Juggle' then 'fb.block.juggle' 
								when app_name='Bubble Shoot Pro' then 'fb.bubble.shoot.pro'
								when app_name='Save The Dog' then 'fb.save.dog' 
									when app_name='Egg Shoot Dino' then 'fb.egg.bubble'
								else 'other' end as package_name
								,case when lower(platform)='ios' then 'iOS' when lower(platform)='android' then 'Android' else 'web' end  as platform
								,upper(country) as country_code
								,placement_name
								,sum(revenue) AS revenue
								,sum(requests) as requests
								,sum(filled_requests) as filled_requests
								,sum(impressions) as impressions
								,sum(clicks) as clicks
						FROM `fb-ai-avatar-puzzle.analytics_439907691.ad_analytics_detail_hour_day_append_*`
						where _TABLE_SUFFIX>='20250101' 
						--and app_name='OHO'
						and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
						and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
						group by update_timestamp,stats_date,package_name,platform,country_code,placement_name
						)a 
						where date(format_timestamp("%Y-%m-%d %H:00:00", TIMESTAMP(update_timestamp) - INTERVAL 2 HOUR,'America/Los_Angeles'))=stats_date
						group by stats_date,event_day_hour,package_name,platform,country_code,placement_name
					)b 
				)c 
				ORDER BY stats_date,event_day_hour
			)
			SELECT 
				stats_date
					,event_day_hour
					,package_name
					,platform
					,country_code
					,ad_type
					,placement as placement
					,sum(revenue) as revenue
					,sum(requests) as requests
					,sum(filled_requests) as filled_requests
					,sum(impressions) as impressions
					,sum(clicks) as clicks
					,sum(this_hour_revenue) as this_hour_revenue
					,sum(this_hour_requests) as this_hour_requests
					,sum(this_hour_filled_requests) as this_hour_filled_requests
					,sum(this_hour_impressions) as this_hour_impressions
					,sum(this_hour_clicks) as this_hour_clicks
				FROM a 
				,UNNEST(platform) as platform
				,UNNEST(country_code) as country_code
				,UNNEST(placement_name) as placement
				,UNNEST(ad_type) as ad_type
			where NOT (platform = 'TOTAL' AND country_code = 'TOTAL' AND ad_type = 'TOTAL' AND placement = 'TOTAL')
			group by stats_date,event_day_hour,package_name,platform,country_code,placement,ad_type;


----所有维度的收入小时数据
delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_data`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_data`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_data`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_data`
			--PARTITION BY stats_date as 
		with a as (
		SELECT 
				parse_date('%Y%m%d',_table_suffix) as stats_date
				,format_timestamp("%Y-%m-%d %H:00:00", start_timestamp,'America/Los_Angeles') as event_day_hour 
				,case when app_name='Solitaire' then 'fb.zp' 
					when app_name='OHO' then 'fb.ai.avatar.puzzle' 
					when app_name='Bubble Pop Fruit' then 'fb.fruit.bubble' 
					when app_name='AHA' then 'fb.ai.aha' 
					when app_name='Fate Quest' then 'fb.otme.fate.quest' 
					when app_name='Block Juggle' then 'fb.block.juggle' 
					when app_name='Bubble Shoot Pro' then 'fb.bubble.shoot.pro'
					when app_name='Save The Dog' then 'fb.save.dog' 
						when app_name='Egg Shoot Dino' then 'fb.egg.bubble'
					else 'other' end as package_name
				,'TOTAL' as platform
				,'TOTAL' as country_code
				,'TOTAL' as ad_type
				,'TOTAL' as placement
				,sum(revenue) AS revenue
				,sum(requests) as requests
				,sum(filled_requests) as filled_requests
				,sum(impressions) as impressions
				,sum(clicks) as clicks
			FROM `fb-ai-avatar-puzzle.analytics_439907691.ad_analytics_hour_*`
			where _TABLE_SUFFIX>='20250101' 
			and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
			and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
			group by event_day_hour,package_name,stats_date,platform,country_code
			union all 
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,platform
				,country_code
				,ad_type
				,placement
				,this_hour_revenue as revenue
				,this_hour_requests as requests
				,this_hour_filled_requests as filled_requests
				,this_hour_impressions as impressions
				,this_hour_clicks as clicks
			FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_datail`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			)
			SELECT
				stats_date
				,event_day_hour
				,a.package_name
				,app_name
				,a.platform
				,country_code
				,ad_type
				,placement
				,revenue 
				,requests
				,filled_requests
				,impressions
				,clicks
			FROM a 
			left join `gzdw2024.gz_dim.app_info_googlesheet` b
			on a.package_name=b.package_name
			union all 
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,'FBG_TOTAL' AS app_name
				,platform
				,country_code
				,ad_type
				,placement
				,sum(revenue) AS revenue
				,sum(requests) as requests
				,sum(filled_requests) as filled_requests
				,sum(impressions) as impressions
				,sum(clicks) as clicks
			FROM a 
			group by stats_date
				,event_day_hour
				,package_name
				,platform
				,ad_type
				,placement
				,country_code;
			


--------分平台不分国家的成本小时明细

delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_total`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_total`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_total`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_total`
			--PARTITION BY stats_date as 
						SELECT 
							stats_date
							,case when lower(campaign_name) like '%ios%' then 'iOS'
								when lower(campaign_name) like '%web%' then 'web' 
								else 'Android' end as platform
							,package_name
							,account_name
							,campaign_name
							,'TOTAL' AS country_code
							,concat(cast(stats_date as string),' ',concat(substring(hour,1,2),':00:00')) as event_day_hour 
						  	,sum(cost) as cost 
						  	,sum(install) as install
						  	,sum(impressions) as cost_impressions
						  	,sum(clicks) as cost_clicks
						 from 
						   (
							SELECT 
								date(stats_date) as stats_date
								,case when campaign_name like '%AHA%' then 'fb.ai.aha'
									when campaign_name like '%BBPF%' then 'fb.fruit.bubble'
									when campaign_name like '%ESD%' then 'fb.egg.bubble'
									when campaign_name like '%BSP%' then 'fb.bubble.shoot.pro'
									when campaign_name like '%OHO%' then 'fb.ai.avatar.puzzle'
									when campaign_name like '%SLT%' then 'fb.zp'
									when campaign_name like '%STD%' then 'fb.save.dog'
									when campaign_name like '%FQ%' then 'fb.otme.fate.quest'
									when campaign_name like '%BKJ%' then 'fb.block.juggle'
									ELSE 'other' end as package_name
									,account_name
								,campaign_name
								,hour
								,MAX(safe_cast(spend as float64)) as cost 
								,0 as install
								,MAX(safe_cast(impressions as float64)) as impressions 
								,MAX(safe_cast(clicks as float64)) as clicks 
							FROM `fb-ai-avatar-puzzle.analytics_439907691.fb_insights_hourly_*` 
								where _TABLE_SUFFIX>='20250101' 
								and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
								and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
								and _TABLE_SUFFIX not like '%hour%'
							group by campaign_name ,stats_date,package_name,hour,account_name
							union all 
							SELECT 
								date(stats_date) as stats_date
								,case when campaign_name like '%AHA%' then 'fb.ai.aha'
									when campaign_name like '%BBPF%' then 'fb.fruit.bubble'
									when campaign_name like '%ESD%' then 'fb.egg.bubble'
									when campaign_name like '%BSP%' then 'fb.bubble.shoot.pro'
									when campaign_name like '%OHO%' then 'fb.ai.avatar.puzzle'
									when campaign_name like '%SLT%' then 'fb.zp'
									when campaign_name like '%STD%' then 'fb.save.dog'
									when campaign_name like '%FQ%' then 'fb.otme.fate.quest'
									when campaign_name like '%BKJ%' then 'fb.block.juggle'
									ELSE 'other' end as package_name
									,account_name
								,campaign_name
								,hour
								,0 as cost
								,MAX(safe_cast(action_count as float64)) as install 
								,0 as impressions
								,0 as clicks
							FROM `fb-ai-avatar-puzzle.analytics_439907691.fb_insights_hourly_*` 
							WHERE action_type='mobile_app_install'
							and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
							and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
							and _TABLE_SUFFIX not like '%hour%'
						
							group by campaign_name ,stats_date,package_name,hour,account_name
						  )a 
						   group by stats_date,campaign_name,country_code,platform,package_name,account_name,event_day_hour;
						


--------分平台不分国家的成本小时明细
			
			delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_detail`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_detail`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_detail`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_detail`
			--PARTITION BY stats_date as 

				SELECT
					stats_date
					,event_day_hour
					,package_name
					,case when lower(campaign_name) like '%ios%' then 'iOS'
								when lower(campaign_name) like '%web%' then 'web' 
								else 'Android' end as platform
					,account_name
					,campaign_name
					,country_code
					,cost
					,install
					,impressions
					,clicks
					,cost - ifnull(next_cost,0) as this_hour_cost
					,install - ifnull(next_install,0) as this_hour_install 
					,impressions - ifnull(next_impressions,0) as this_hour_impressions 
					,clicks - ifnull(next_clicks,0) as this_hour_clicks
				FROM
					(
					SELECT
						stats_date
						,event_day_hour
						,package_name
						,account_name
						,campaign_name
						,country_code
						,cost
						,install
						,impressions
						,clicks
						,lag(cost) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_cost
						,lag(install) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_install
						,lag(impressions) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_impressions
						,lag(clicks) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_clicks
					FROM
						(			   
						SELECT
							stats_date
							,event_day_hour
							,package_name
							,account_name
							,campaign_name
							,country_code
							,(cost + next_cost)/2 as cost
							,(install + next_install)/2 as install
							,(impressions + next_impressions)/2 as impressions
							,(clicks + next_clicks)/2 as clicks
						FROM
							(
							SELECT
								stats_date
								,event_day_hour
								,package_name
								,account_name
								,campaign_name
								,country_code
								,cost
								,install
								,impressions
								,clicks
								,lead(cost) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_cost
								,lead(install) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_install
								,lead(impressions) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_impressions
								,lead(clicks) over(partition by stats_date,package_name,country_code,account_name,campaign_name order by event_day_hour) as next_clicks
							FROM
								(
							  	SELECT
								  	stats_date
								  	,event_day_hour
								  	,package_name
								  	,account_name
								  	,campaign_name
								  	,country_code
								  	,SUM(cost) as cost 
								  	,sum(install) as install
								  	,sum(impressions) as impressions
								  	,sum(clicks) as clicks
								FROM
									(
									SELECT 
										date(stats_date) as stats_date
										,case when campaign_name like '%AHA%' then 'fb.ai.aha'
											when campaign_name like '%BBPF%' then 'fb.fruit.bubble'
											when campaign_name like '%ESD%' then 'fb.egg.bubble'
											when campaign_name like '%BSP%' then 'fb.bubble.shoot.pro'
											when campaign_name like '%OHO%' then 'fb.ai.avatar.puzzle'
											when campaign_name like '%SLT%' then 'fb.zp'
											when campaign_name like '%STD%' then 'fb.save.dog'
											when campaign_name like '%FQ%' then 'fb.otme.fate.quest'
											when campaign_name like '%BKJ%' then 'fb.block.juggle'
											ELSE 'other' end as package_name
											,account_name
										,campaign_name
										,country as country_code
										,format_timestamp("%Y-%m-%d %H:00:00", TIMESTAMP(update_time) - INTERVAL 0 HOUR,'America/Los_Angeles') as event_day_hour 
										,MAX(safe_cast(spend as float64)) as cost 
										,0 as install
										,MAX(safe_cast(impressions as float64)) as impressions 
										,MAX(safe_cast(clicks as float64)) as clicks 
									FROM `fb-ai-avatar-puzzle.analytics_439907691.fb_insights_country_hour_day_append_*` 
										where _TABLE_SUFFIX>='20250101' 
										and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
										and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
										and _TABLE_SUFFIX not like '%hour%'
									group by campaign_name ,stats_date,package_name,event_day_hour,country	,account_name
									union all 
									SELECT 
										date(stats_date) as stats_date
										,case when campaign_name like '%AHA%' then 'fb.ai.aha'
											when campaign_name like '%BBPF%' then 'fb.fruit.bubble'
											when campaign_name like '%ESD%' then 'fb.egg.bubble'
											when campaign_name like '%BSP%' then 'fb.bubble.shoot.pro'
											when campaign_name like '%OHO%' then 'fb.ai.avatar.puzzle'
											when campaign_name like '%SLT%' then 'fb.zp'
											when campaign_name like '%STD%' then 'fb.save.dog'
											when campaign_name like '%FQ%' then 'fb.otme.fate.quest'
											when campaign_name like '%BKJ%' then 'fb.block.juggle'
											ELSE 'other' end as package_name
											,account_name
										,campaign_name
										,country as country_code
										,format_timestamp("%Y-%m-%d %H:00:00", TIMESTAMP(update_time) - INTERVAL 0 HOUR,'America/Los_Angeles') as event_day_hour 
										,0 as cost

										,MAX(safe_cast(action_count as float64)) as install 
										,0 as impressions
										,0 as clicks
									FROM `fb-ai-avatar-puzzle.analytics_439907691.fb_insights_country_hour_day_append_*` 
									WHERE action_type='mobile_app_install'
									and _TABLE_SUFFIX >=replace(cast(date_add(run_date,interval -history_day day) as string),'-','')
									and _TABLE_SUFFIX <=replace(cast(date_add(run_date,interval -history_end_day day) as string),'-','')
									and _TABLE_SUFFIX not like '%hour%'
									group by campaign_name ,stats_date,package_name,event_day_hour,country	,account_name
									)a 
									group by stats_date
								  	,event_day_hour
								  	,package_name
								  	,account_name
								  	,campaign_name
								  	,country_code
								)c 
							)d 
						)e 
					)f 
					where date(event_day_hour)=stats_date
						--order by package_name,stats_date,event_day_hour,account_name
						;
----所有维度的成本小时数据
		delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_data`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_data`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_data`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_data`
			--PARTITION BY stats_date as 
			with a as (
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,platform
				,account_name
				,campaign_name
				,country_code
				,sum(cost) as cost
				,sum(install) as install
				,sum(cost_impressions) as cost_impressions
				,sum(cost_clicks) as cost_clicks
			FROM
				(		
				SELECT
					stats_date
					,event_day_hour
					,package_name
					,ARRAY['TOTAL',platform] AS platform
					,ARRAY['TOTAL',account_name] AS account_name
					,ARRAY['TOTAL',campaign_name] AS campaign_name
					,country_code
					,cost
					,install
					,cost_impressions
					,cost_clicks
				FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_total`
				WHERE stats_date>=date_add(run_date,interval -history_day day)
				and  stats_date<=date_add(run_date,interval -history_end_day day)
				union all 
				SELECT
					stats_date
					,event_day_hour
					,package_name
					,ARRAY['TOTAL',platform] AS platform
					,ARRAY['TOTAL',account_name] AS account_name
					,ARRAY['TOTAL',campaign_name] AS campaign_name
					,country_code
					,this_hour_cost as cost
					,this_hour_install as install
					,this_hour_impressions as cost_impressions
					,this_hour_clicks as cost_clicks
				FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_detail`
				WHERE stats_date>=date_add(run_date,interval -history_day day)
				and  stats_date<=date_add(run_date,interval -history_end_day day)
			)a 
			,UNNEST(platform) as platform
			,UNNEST(account_name) as account_name
			,UNNEST(campaign_name) as campaign_name
			group by stats_date
				,event_day_hour
				,package_name
				,platform
				,account_name
				,campaign_name
				,country_code
			)
			SELECT
				stats_date
				,event_day_hour
				,a.package_name
				,app_name
				,a.platform
				,account_name
				,campaign_name
				,country_code
				,cost 
				,install
				,cost_impressions
				,cost_clicks
			FROM a 
			left join `gzdw2024.gz_dim.app_info_googlesheet` b
			on a.package_name=b.package_name
			union all 
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,'FBG_TOTAL' AS app_name
				,platform
				,account_name
				,campaign_name
				,country_code
				,sum(cost) as cost
				,sum(install) as install
				,sum(cost_impressions) as cost_impressions
				,sum(cost_clicks) as cost_clicks
			FROM a 
			group by stats_date
				,event_day_hour
				,package_name
				,platform
				,account_name
				,campaign_name
				,country_code;







-------实时ROI
	delete `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_roi_hour_data`
			where stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			;


			insert `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_roi_hour_data`
		    --drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_roi_hour_data`;
			--create table `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_roi_hour_data`
			--PARTITION BY stats_date as 
		SELECT
			stats_date
			,event_day_hour
			,package_name
			,app_name
			,platform
			,country_code
			,sum(cost) as  cost
			,sum(install) as install
			,sum(cost_impressions) as cost_impressions
			,sum(cost_clicks) as cost_clicks
			,sum(revenue ) as revenue
			,sum(requests ) as requests
			,sum(filled_requests ) as filled_requests
			,sum(impressions ) as impressions
			,sum(clicks) as clicks
		FROM
			(
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,app_name
				,platform
				,country_code
				,cost 
				,install
				,cost_impressions
				,cost_clicks
				,0 as revenue
				,0 as requests
				,0 as filled_requests
				,0 as impressions
				,0 as clicks
			FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_cost_hour_data`
			WHERE stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			and account_name='TOTAL'
			and campaign_name='TOTAL'
			union all  
			SELECT
				stats_date
				,event_day_hour
				,package_name
				,app_name
				,platform
				,country_code
				,0 as cost 
				,0 as install
				,0 as cost_impressions
				,0 as cost_clicks
				,revenue
				,requests
				,filled_requests
				,impressions
				,clicks
			FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_revenue_hour_data`
			WHERE stats_date>=date_add(run_date,interval -history_day day)
			and  stats_date<=date_add(run_date,interval -history_end_day day)
			and ad_type='TOTAL'
			and placement='TOTAL'
			)a 
			group by stats_date
			,event_day_hour
			,package_name
			,platform
			,country_code
			,app_name;



----------3.收入，成本，roi，ecpm

	drop table if exists `gzdw2024.fbgame_realtime_03_bi.dws_common_game_hour_comparison_roi_report`;
	create table `gzdw2024.fbgame_realtime_03_bi.dws_common_game_hour_comparison_roi_report`
    as 

		SELECT
			substring(event_day_hour,12,2) as event_hour
			,package_name	
			,app_name
			,country_code
			,platform
			,CASE WHEN   stats_date = date_add(CURRENT_DATE('America/Los_Angeles'),interval 0 day) THEN 'T_0'
				WHEN   stats_date = date_add(CURRENT_DATE('America/Los_Angeles'),interval -1 day) THEN 'T_1'
				WHEN   stats_date = date_add(CURRENT_DATE('America/Los_Angeles'),interval -2 day) THEN 'T_2'
				else null end as tag 
			,max(cost) as  cost
			,max(install) as install
			,max(cost_impressions) as cost_impressions
			,max(cost_clicks) as cost_clicks
			,max(revenue ) as revenue
			,max(requests ) as requests
			,max(filled_requests ) as filled_requests
			,max(impressions ) as impressions
			,max(clicks) as clicks
		FROM `gzdw2024.fbgame_realtime_03_bi.dws_fb_common_game_roi_hour_data`
		where stats_date >= date_add(CURRENT_DATE('America/Los_Angeles'),interval -2 day)
		and stats_date <= date_add(CURRENT_DATE('America/Los_Angeles'),interval -history_end_day day)
		group by event_hour,package_name,country_code,platform,tag,app_name;



delete `gzdw2024.fbgame_real_01_basic.dws_upadate_total`
where cat='roi_hour_real';

insert `gzdw2024.fbgame_real_01_basic.dws_upadate_total`
--create table `gzdw2024.fbgame_real_01_basic.dws_upadate_total`	as 
SELECT 'roi_hour_real' as cat 
,SUBSTRING(CAST(DATETIME(CURRENT_TIMESTAMP(), "Asia/Shanghai") AS STRING),1,19) AS update_time;

end;
